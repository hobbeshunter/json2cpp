name: ci
on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

jobs:
  check_format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: llvm-15.0.2
          clangtidy: 15.0.2

      - name: Setup Cmakelang
        run: pip3 install --user cmakelang==0.6.13

      - name: Check Format
        run: |
          ./scripts/format-all.sh
          (if [ -n "`git diff --name-only --diff-filter=M --ignore-submodules`" ]; then echo $'\n    Some files are not properly formatted. You can use "./scripts/format-all.sh".\n'; git diff --diff-filter=M; false; fi)


  build_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-22.04
          - windows-2022
          - macos-11
        compiler:
          - gcc-11
          - msvc
          - llvm-15.0.2
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Release
          - Debug
        exclude:
          - os: windows-2022
            compiler: gcc-11
          - os: ubuntu-22.04
            compiler: msvc
          - os: macos-11
            compiler: msvc

    steps:
      - uses: actions/checkout@v3

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          conan: 2.0.9

      - name: Conan
        run: |
          conan --version
          conan profile detect
          conan config install ci/conan2

      - name: Build
        run: |
          conan build . -pr:h=${{matrix.os}}-${{matrix.compiler}} -s:h build_type=${{matrix.build_type}} -pr:b=default -u --build="*" -c tools.cmake.cmaketoolchain:generator="${{matrix.generator}}" -c tools.cmake.cmake_layout:build_folder_vars="['settings.compiler']" -c user.build:tests=True -c user.build:large_tests=True

  deploy:
    runs-on: ubuntu-22.04
    needs: build_and_test
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: gcc-11
          cmake: true
          ninja: true
          conan: 2.0.9

      - name: Conan
        run: |
          conan --version
          conan profile detect
          conan config install ci/conan2

      - name: Build
        run: |
          conan create . --user mwudenka --channel snapshot -pr:h=ubuntu-22.04-gcc-11 -s:h build_type=Release -pr:b=default -u --build="*" -c tools.cmake.cmaketoolchain:generator="Ninja Multi-Config"

      - name: Upload
        env:
          CONAN2_MWUDENKA: ${{ secrets.CONAN2_MWUDENKA }}
        run: |
          conan remote add mwudenka https://conan2.wudenka.de
          conan remote login mwudenka mwudenka -p "$CONAN2_MWUDENKA"
          conan upload json2cpp -r=mwudenka --only-recipe

